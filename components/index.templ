package components

import "github.com/adriffaud/indi-web/internal/indi-server"
import "strings"
import "github.com/adriffaud/indi-web/internal/indi-client"
import "strconv"

templ navItem(path, name, active string) {
<li class="nav-item">
	<a href={ templ.URL(path) } class={ "nav-link" , templ.KV("active", active=="/hardware" ) }>{ name }</a>
</li>
}

templ navigation(active string) {
<nav class="navbar navbar-expand-lg bg-body-tertiary">
	<div class="container-fluid">
		<a href="/" class="navbar-brand">INDI Web</a>
		<button class="navbar-toggler" type="button" data-bs-toggle="collapse"
			data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
			aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
		<div class="collapse navbar-collapse" id="navbarSupportedContent">
			<ul class="navbar-nav me-auto">
				@navItem("/hardware", "Hardware configuration", active)
			</ul>
		</div>
	</div>
</nav>
}

templ Main(active string) {
@Root() {
@navigation(active)
<div></div>
}
}

templ Hardware(active string, properties indiclient.Properties) {
@Root() {
@navigation(active)
<div class="container">
	for _, device := range properties.GetDevicesSorted() {
	<h1>{ device }</h1>
	<table class="table table-bordered table-striped">
		<tr>
			<th>Label</th>
			<th>Name</th>
			<th>State</th>
			<th>Permission</th>
			<th>Rule</th>
			<th>Timeout</th>
			<th>Timestamp</th>
		</tr>
		for _, group := range properties.GetDeviceGroupsSorted(device) {
		<tr>
			<th colspan="7" class="table-primary">{ group }</th>
		</tr>
		for _, property := range properties.GetPropertiesForDeviceGroup(device, group) {
		<tr>
			<td>{ property.Label }</td>
			<td>{ property.Name }</td>
			<td>{ property.State }</td>
			<td>{ property.Perm }</td>
			<td>{ property.Rule }</td>
			<td>{ strconv.Itoa(property.Timeout) }</td>
			<td>{ property.Timestamp }</td>
		</tr>
		for _, value := range property.Values {
		<tr>
			<td colspan="3">{ value.Label }</td>
			<td colspan="2">{ value.Name }</td>
			<td colspan="2"><strong>{ value.Value }</strong></td>
		</tr>
		}
		}
		}
	</table>
	}
</div>
}
}

templ driverSelector(group string, drivers []indiserver.Device, selection indiserver.Device) {
<label for={ strings.ToLower(group) + "_select" } class="form-label">{ group }</label>
<select id={ strings.ToLower(group) + "_select" } name={ strings.ToLower(group) + "_select" } class="form-control">
	<option value=""></option>
	for _, driver := range drivers {
	<option value={ driver.DriverName } if selection.DriverName==driver.DriverName &&
		selection.Manufacturer==driver.Manufacturer { selected }>
		{ driver.Manufacturer } - { driver.Name }
	</option>
	}
</select>
}

templ input(id, value string) {
<input id={ id } value={ value } class="form-control" />
}

templ Setup(driversGroups indiserver.DeviceGroups, devices map[string]indiserver.Device) {
@Root() {
<div class="container h-100">
	<form method="post" class="row h-100 justify-content-center align-items-center">
		<fieldset class="row g-4">
			<div class="col-md-6">
				<label for="date-time" class="form-label">Date/Time</label>
				@input("date-time", "2023-11-01 20:45")
			</div>
			<div class="col-md-6">
				@driverSelector("Mount", driversGroups["Telescopes"], devices["mount"])
			</div>
			<div class="col-md-6">
				<label for="latitude">Latitude</label>
				@input("latitude", "N 47ยบ 14' 25\"")
			</div>
			<div class="col-md-6">
				@driverSelector("Camera", driversGroups["CCDs"], devices["ccd"])
			</div>
			<div class="col-md-6">
				<label for="longitude">Longitude</label>
				@input("longitude", "E 05ยบ 55' 57\"")
			</div>
			<div class="col-md-6">
				@driverSelector("Guider", driversGroups["CCDs"], devices["guide"])
			</div>
			<div class="col-12 text-center">
				<button id="indi_server" type="submit" class="btn btn-primary">Start</button>
			</div>
		</fieldset>
	</form>
</div>
}
}
