package components

import (
	"fmt"
	indiclient "github.com/adriffaud/indi-web/internal/indi-client"
	"strings"
)

func deviceID(device string) string {
	return strings.ReplaceAll(strings.ToLower(device), " ", "_")
}

func uniquePropertyID(property indiclient.Property) string {
	group := strings.ReplaceAll(strings.ToLower(property.Group), " ", "_")
	name := strings.ToLower(property.Name)
	return fmt.Sprintf("%s_%s_%s", deviceID(property.Device), group, name)
}

func uniqueValueName(property indiclient.Property, key string) string {
	key = strings.ToLower(key)
	return fmt.Sprintf("%s_%s", uniquePropertyID(property), key)
}

templ PropertyValues(property indiclient.Property) {
	switch property.Type {
		case indiclient.Text, indiclient.Number:
			for _, value := range property.Values {
				<tr id={ uniqueValueName(property, value.Name) } hx-swap-oob="true">
					<td>
						<label for={ uniqueValueName(property, value.Name) + "_input" }>{ value.Label }</label>
					</td>
					<td>
						<input
							type="text"
							id={ uniqueValueName(property, value.Name) + "_input" }
							value={ value.Value }
							if property.Perm=="ro" {
								disabled
							}
						/>
					</td>
				</tr>
			}
		case indiclient.Switch:
			<tr id={ uniquePropertyID(property) } hx-swap-oob="true">
				<td>
					for _, value := range property.Values {
						<button
							hx-post="/indi/action"
							hx-swap="none"
							hx-vals={ fmt.Sprintf("{\"device\": \"%s\", \"name\": \"%s\", \"valueName\": \"%s\"}", property.Device, property.Name, value.Name) }
							type="button"
							if property.Perm=="ro" || value.Value == "On" {
								disabled
							}
						>
							{ value.Label }
						</button>
					}
				</td>
			</tr>
	}
}

templ groupView(properties indiclient.Properties, device string) {
	for _, group := range properties.GetDeviceGroupsSorted(device) {
		<tr>
			<th colspan="6" style="border: 1px solid black; background-color: yellow;">{ group }</th>
		</tr>
		for _, property := range properties.GetPropertiesForDeviceGroup(device,
	group) {
			<tr>
				<td colspan="6" style="border: 1px solid black; background-color: cyan;">{ property.Label }</td>
			</tr>
			@PropertyValues(property)
		}
	}
}

templ DeviceView(properties indiclient.Properties, device string) {
	<table id={ deviceID(device) } hx-swap-oob="true" style="border: 2px solid black; border-collapse: collapse;">
		<thead>
			<tr>
				<th colspan="6" style="border: 1px solid black; background-color: gray;">{ device }</th>
			</tr>
		</thead>
		<tbody>
			@groupView(properties, device)
		</tbody>
	</table>
}

templ Hardware(properties indiclient.Properties) {
	@Root() {
		<div>
			for _, device := range properties.GetDevicesSorted() {
				@DeviceView(properties, device)
			}
		</div>
	}
}

templ RawHardware(properties indiclient.Properties) {
	<!DOCTYPE html>
	<html lang="fr">
		<head>
			<title>INDI Air</title>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<script src="static/htmx.min.js"></script>
			<script src="static/sse.js"></script>
			<script defer src="static/alpine.js"></script>
		</head>
		<body>
			<div hx-ext="sse" sse-connect="/sse" sse-swap="message"></div>
			for _, device := range properties.GetDevicesSorted() {
				@DeviceView(properties, device)
			}
		</body>
	</html>
}
